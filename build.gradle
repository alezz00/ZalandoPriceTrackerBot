/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java library project to get you started.
 * For more details take a look at the 'Building Java & JVM projects' chapter in the Gradle
 * User Manual available at https://docs.gradle.org/8.1.1/userguide/building_java_projects.html
 */

plugins {
    // Apply the java-library plugin for API and implementation separation.
    id 'java-library'
}

repositories {
    // Use Maven Central for resolving dependencies.
    jcenter()
}

dependencies {

	implementation group: 'commons-io',				name: 'commons-io',		version: '2.11.0'
	implementation group: 'com.google.code.gson',	name: 'gson',			version: '2.10.1'
	implementation group: 'org.telegram',			name: 'telegrambots',	version: '6.9.7.0'
	implementation group: 'org.yaml', 				name: 'snakeyaml',		version: '2.2'
	
		
	testImplementation 'org.junit.jupiter:junit-jupiter:5.9.1'
	//testImplementation group: 'org.mockito', name: 'mockito-core',			version: '4.8.0'
	//testImplementation group: 'org.mockito', name: 'mockito-junit-jupiter', version: '4.8.0'
	//testImplementation group: 'org.mockito', name: 'mockito-inline',		version: '4.8.0'
}

jar {
	exclude "META-INF/**"
	exclude "module-info.class"
	 manifest {
        attributes 'Main-Class': 'runner.Runner'
    }
    from {
        configurations.runtimeClasspath.collect { it.isDirectory() ? it : zipTree(it) }
    }
}

// Apply a specific Java toolchain to ease working on different environments.
java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

tasks.named('test') {
    // Use JUnit Platform for unit tests.
    useJUnitPlatform()
}
